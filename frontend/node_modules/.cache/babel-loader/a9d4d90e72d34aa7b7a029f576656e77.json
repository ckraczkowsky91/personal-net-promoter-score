{"ast":null,"code":"var _jsxFileName = \"/Users/Home/github/personal-net-promoter-score/frontend/src/Components/Admin.js\";\nimport React from 'react';\nimport { Card, CardContent, Container, Grid, Paper, Slider, Typography } from '@material-ui/core';\nimport { gql, useQuery } from '@apollo/client';\n/*\n  GraphQL\n*/\n\nconst GET_SUBMISSIONS = gql`\n  query getAllSubmissions{\n    submissions{\n      _id\n      score\n      strength\n      weakness\n    }\n  }\n`;\n/*\n  Component\n*/\n\nfunction calculateNPS(data) {\n  var detractors = 0;\n  var passives = 0;\n  var promoters = 0;\n  var totalCount = 0;\n  data.submissions.map(submission => {\n    if (submission.score <= 6) {\n      detractors++;\n    } else if (submission.score <= 8) {\n      passives++;\n    } else {\n      promoters++;\n    }\n\n    ;\n    totalCount++;\n  });\n  var npsScore = 100 * (promoters / totalCount - detractors / totalCount);\n  return Math.ceil(npsScore);\n}\n\n;\nconst marks = [{\n  value: -100,\n  label: -100\n}, {\n  value: 100,\n  label: 100\n}];\nexport default function Admin() {\n  const {\n    loading,\n    data\n  } = useQuery(GET_SUBMISSIONS);\n  if (loading) return 'Loading...';\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: calculateNPS(data),\n    disabled: \"true\",\n    marks: marks,\n    max: 100,\n    min: -100,\n    steps: 200,\n    valueLabelDisplay: \"on\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }))), data.submissions.map(submission => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 4,\n    key: submission._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, \"Score: \", submission.score), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, \"Strength: \", submission.strength), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, \"Weakness: \", submission.weakness)))))));\n}\n;","map":{"version":3,"sources":["/Users/Home/github/personal-net-promoter-score/frontend/src/Components/Admin.js"],"names":["React","Card","CardContent","Container","Grid","Paper","Slider","Typography","gql","useQuery","GET_SUBMISSIONS","calculateNPS","data","detractors","passives","promoters","totalCount","submissions","map","submission","score","npsScore","Math","ceil","marks","value","label","Admin","loading","_id","strength","weakness"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Container,\n  Grid,\n  Paper,\n  Slider,\n  Typography\n} from '@material-ui/core';\nimport { gql, useQuery } from '@apollo/client';\n\n/*\n  GraphQL\n*/\nconst GET_SUBMISSIONS = gql`\n  query getAllSubmissions{\n    submissions{\n      _id\n      score\n      strength\n      weakness\n    }\n  }\n`;\n\n/*\n  Component\n*/\nfunction calculateNPS(data){\n  var detractors =0;\n  var passives = 0;\n  var promoters = 0;\n  var totalCount = 0;\n\n  data.submissions.map((submission) => {\n    if(submission.score <= 6){\n      detractors++;\n    } else if(submission.score <=8){\n      passives++;\n    } else {\n      promoters++;\n    };\n    totalCount++;\n  });\n  var npsScore = 100 * (promoters/totalCount - detractors/totalCount);\n  return Math.ceil(npsScore);\n};\n\nconst marks = [\n  {\n    value: -100,\n    label: -100\n  },\n  {\n    value: 100,\n    label: 100\n  }\n];\n\nexport default function Admin(){\n  const {loading, data} = useQuery(GET_SUBMISSIONS);\n\n  if (loading) return 'Loading...';\n\n  return(\n    <Container>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper>\n            <Slider\n              defaultValue={calculateNPS(data)}\n              disabled='true'\n              marks={marks}\n              max={100}\n              min={-100}\n              steps={200}\n              valueLabelDisplay='on'/>\n          </Paper>\n        </Grid>\n        {\n          data.submissions.map(submission => (\n            <Grid item xs={6} sm={4} key={submission._id}>\n              <Card variant=\"outlined\">\n                <CardContent>\n                  <Typography>Score: {submission.score}</Typography>\n                  <Typography>Strength: {submission.strength}</Typography>\n                  <Typography>Weakness: {submission.weakness}</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          ))\n        }\n      </Grid>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}