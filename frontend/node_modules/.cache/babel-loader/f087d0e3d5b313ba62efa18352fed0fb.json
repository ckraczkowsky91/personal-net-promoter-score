{"ast":null,"code":"var _jsxFileName = \"/Users/Home/github/personal-net-promoter-score/frontend/src/Components/Login.js\";\nimport React, { useContext, createContext, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Button, Container, TextField } from '@material-ui/core';\nimport { gql, useMutation } from '@apollo/client';\nimport { LoginButton, TitleText } from './StyledComponents';\nimport { useAuth } from './utils';\n/*\n  GraphQL\n*/\n\nconst AUTHENTICATE_USER = gql`\n  mutation authenticateUser($username: String!, $password: String!){\n    authenticateUser(username: $username, password: $password)\n  }\n`;\n/*\n  Component\n*/\n\nexport default function Login() {\n  let history = useHistory();\n  let location = useLocation();\n  let auth = useAuth();\n  const [usernameString, setUsernameString] = useState(null);\n  const [passwordString, setPasswordString] = useState(null);\n  const [inputError, setInputError] = useState(false);\n  const [authenticateUser, {\n    data\n  }] = useMutation(AUTHENTICATE_USER);\n  let {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n\n  const login = event => {\n    authenticateUser({\n      variables: {\n        username: usernameString,\n        password: passwordString\n      }\n    }).then(response => {\n      if (response.data.authenticateUser) {\n        auth.signin(() => {\n          history.replace(from);\n        });\n      } else {\n        var element = document.getElementById('usernameField');\n        console.log(element);\n      }\n\n      ;\n    }).catch(error => {\n      setInputError(true);\n      console.log(error);\n    });\n  };\n\n  const handleTextChange = event => {\n    switch (event.target.id) {\n      case \"usernameField\":\n        setUsernameString(event.target.value);\n        break;\n\n      case \"passwordField\":\n        setPasswordString(event.target.value);\n        break;\n\n      default:\n        console.log('ERROR: No input given!');\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    style: {\n      width: '30rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TitleText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Please log in to continue:\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"usernameField\",\n    error: inputError,\n    fullWidth: true,\n    label: \"Username\",\n    onChange: handleTextChange,\n    style: {\n      marginTop: '1.5rem'\n    },\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"passwordField\",\n    fullWidth: true,\n    label: \"Password\",\n    onChange: handleTextChange,\n    style: {\n      marginTop: '1.5rem'\n    },\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(LoginButton, {\n    onClick: login,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Log in\"));\n}\n;","map":{"version":3,"sources":["/Users/Home/github/personal-net-promoter-score/frontend/src/Components/Login.js"],"names":["React","useContext","createContext","useState","useHistory","useLocation","Button","Container","TextField","gql","useMutation","LoginButton","TitleText","useAuth","AUTHENTICATE_USER","Login","history","location","auth","usernameString","setUsernameString","passwordString","setPasswordString","inputError","setInputError","authenticateUser","data","from","state","pathname","login","event","variables","username","password","then","response","signin","replace","element","document","getElementById","console","log","catch","error","handleTextChange","target","id","value","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useContext, createContext, useState } from 'react';\nimport {\n  useHistory,\n  useLocation\n} from 'react-router-dom';\nimport {\n  Button,\n  Container,\n  TextField\n} from '@material-ui/core';\nimport { gql, useMutation } from '@apollo/client';\n\nimport { LoginButton, TitleText } from './StyledComponents';\nimport { useAuth } from './utils';\n\n/*\n  GraphQL\n*/\nconst AUTHENTICATE_USER = gql`\n  mutation authenticateUser($username: String!, $password: String!){\n    authenticateUser(username: $username, password: $password)\n  }\n`;\n\n/*\n  Component\n*/\nexport default function Login() {\n  let history = useHistory();\n  let location = useLocation();\n  let auth = useAuth();\n  const [usernameString, setUsernameString] = useState(null);\n  const [passwordString, setPasswordString] = useState(null);\n  const [inputError, setInputError] = useState(false);\n  const [authenticateUser, {data}] = useMutation(AUTHENTICATE_USER);\n\n  let { from } = location.state || { from: { pathname: \"/\" } };\n\n  const login = (event) => {\n    authenticateUser({variables: {username: usernameString, password: passwordString}})\n      .then((response) => {\n        if(response.data.authenticateUser){\n          auth.signin(() => {\n            history.replace(from);\n          });\n        } else {\n          var element = document.getElementById('usernameField');\n          console.log(element);\n        };\n      })\n      .catch((error) => {\n        setInputError(true);\n        console.log(error);\n      })\n  };\n\n  const handleTextChange = (event) => {\n    switch(event.target.id){\n      case \"usernameField\":\n        setUsernameString(event.target.value);\n        break;\n      case \"passwordField\":\n        setPasswordString(event.target.value);\n        break;\n      default:\n        console.log('ERROR: No input given!');\n    };\n  };\n\n  return (\n    <Container style={{width:'30rem'}}>\n      <TitleText>Please log in to continue:</TitleText>\n      <form>\n        <TextField\n          id=\"usernameField\"\n          error={inputError}\n          fullWidth={true}\n          label=\"Username\"\n          onChange={handleTextChange}\n          style={{marginTop:'1.5rem'}}\n          variant=\"outlined\"/>\n        <br/>\n        <TextField\n          id=\"passwordField\"\n          \n          fullWidth={true}\n          label=\"Password\"\n          onChange={handleTextChange}\n          style={{marginTop:'1.5rem'}}\n          variant=\"outlined\"/>\n      </form>\n      <LoginButton\n        onClick={login}\n        variant='outlined'>Log in</LoginButton>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}